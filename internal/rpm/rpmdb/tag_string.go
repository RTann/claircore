// Code generated by "stringer -type Tag,Kind"; DO NOT EDIT.

package rpmdb

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TagInvalid - -1]
	_ = x[TagHeaderImage-62]
	_ = x[TagHeaderSignatures-63]
	_ = x[TagHeaderImmutable-64]
	_ = x[TagHeaderRegions-65]
	_ = x[TagHeaderI18nTable-100]
	_ = x[_tagSigBase-256]
	_ = x[TagSigSize-257]
	_ = x[TagSigLeMD5-258]
	_ = x[TagSigPGP-259]
	_ = x[TagSigLeMD5_2-260]
	_ = x[TagSigMD5-261]
	_ = x[TagSigGPG-262]
	_ = x[TagSigGPG5-263]
	_ = x[TagBadSHA1_1-264]
	_ = x[TagBadSHA1_2-265]
	_ = x[TagPubKeys-266]
	_ = x[TagDSAHeader-267]
	_ = x[TagRSAHeader-268]
	_ = x[TagSHA1Header-269]
	_ = x[TagLongSigSize-270]
	_ = x[TagLongArchiveSize-271]
	_ = x[TagSHA256Header-273]
	_ = x[TagVeritySignatures-276]
	_ = x[TagVeritySignatureAlgo-277]
	_ = x[TagName-1000]
	_ = x[TagVersion-1001]
	_ = x[TagRelease-1002]
	_ = x[TagEpoch-1003]
	_ = x[TagSummary-1004]
	_ = x[TagDescription-1005]
	_ = x[TagBuildTime-1006]
	_ = x[TagBuildHost-1007]
	_ = x[TagInstallTime-1008]
	_ = x[TagSize-1009]
	_ = x[TagDistribution-1010]
	_ = x[TagVendor-1011]
	_ = x[TagGIF-1012]
	_ = x[TagXPM-1013]
	_ = x[TagLicense-1014]
	_ = x[TagPackager-1015]
	_ = x[TagGroup-1016]
	_ = x[TagChangelog-1017]
	_ = x[TagSource-1018]
	_ = x[TagPatch-1019]
	_ = x[TagURL-1020]
	_ = x[TagOS-1021]
	_ = x[TagArch-1022]
	_ = x[TagPreInstall-1023]
	_ = x[TagPostInstall-1024]
	_ = x[TagPreUninstall-1025]
	_ = x[TagPostUninstall-1026]
	_ = x[TagOldFilenames-1027]
	_ = x[TagFileSizes-1028]
	_ = x[TagFileStates-1029]
	_ = x[TagFileModes-1030]
	_ = x[TagFileUids-1031]
	_ = x[TagFileGids-1032]
	_ = x[TagFileRDevs-1033]
	_ = x[TagFileMTimes-1034]
	_ = x[TagFileDigests-1035]
	_ = x[TagFileLinkTos-1036]
	_ = x[TagFileFlags-1037]
	_ = x[TagRoot-1038]
	_ = x[TagFileUsername-1039]
	_ = x[TagFileGroupname-1040]
	_ = x[TagExclude-1041]
	_ = x[TagExclusive-1042]
	_ = x[TagIcon-1043]
	_ = x[TagSourceRPM-1044]
	_ = x[TagFileVerifyFlags-1045]
	_ = x[TagArchiveSize-1046]
	_ = x[TagProvideName-1047]
	_ = x[TagRequireFlags-1048]
	_ = x[TagRequireName-1049]
	_ = x[TagRequireVersion-1050]
	_ = x[TagNoSource-1051]
	_ = x[TagNoPatch-1052]
	_ = x[TagConflictFlags-1053]
	_ = x[TagConflictName-1054]
	_ = x[TagConflictVersion-1055]
	_ = x[TagDefaultPrefix-1056]
	_ = x[TagBuildRoot-1057]
	_ = x[TagInstallPrefix-1058]
	_ = x[TagExcludeArch-1059]
	_ = x[TagExcludeOS-1060]
	_ = x[TagExclusiveArch-1061]
	_ = x[TagExclusiveOS-1062]
	_ = x[TagAutoReqProv-1063]
	_ = x[TagRPMVersion-1064]
	_ = x[TagTriggerScripts-1065]
	_ = x[TagTriggerName-1066]
	_ = x[TagTriggerVersion-1067]
	_ = x[TagTriggerFlags-1068]
	_ = x[TagTriggerIndex-1069]
	_ = x[TagVerifyScript-1079]
	_ = x[TagChangelogTime-1080]
	_ = x[TagChangelogName-1081]
	_ = x[TagChangelogText-1082]
	_ = x[TagBrokenMD5-1083]
	_ = x[TagPreReq-1084]
	_ = x[TagPreInstallProg-1085]
	_ = x[TagPostInstallProg-1086]
	_ = x[TagPreUninstallProg-1087]
	_ = x[TagPostUninstallProg-1088]
	_ = x[TagBuildArchs-1089]
	_ = x[TagObsoleteName-1090]
	_ = x[TagVerifyScriptProg-1091]
	_ = x[TagTriggerScriptProg-1092]
	_ = x[TagDocDir-1093]
	_ = x[TagCookie-1094]
	_ = x[TagFileDevices-1095]
	_ = x[TagFileInodes-1096]
	_ = x[TagFileLangs-1097]
	_ = x[TagPrefixes-1098]
	_ = x[TagInstallPrefixes-1099]
	_ = x[TagTriggerInstall-1100]
	_ = x[TagTriggerUninstall-1101]
	_ = x[TagTriggerPostUninstall-1102]
	_ = x[TagAutoReq-1103]
	_ = x[TagAutoProv-1104]
	_ = x[TagCapability-1105]
	_ = x[TagSourcePackage-1106]
	_ = x[TagOldOriginalFilenames-1107]
	_ = x[TagBuildPreReq-1108]
	_ = x[TagBuildRequires-1109]
	_ = x[TagBuildConflicts-1110]
	_ = x[TagBuildMacros-1111]
	_ = x[TagProvideFlags-1112]
	_ = x[TagProvideVersion-1113]
	_ = x[TagObsoleteFlags-1114]
	_ = x[TagObsoleteVersion-1115]
	_ = x[TagDirindexes-1116]
	_ = x[TagBasenames-1117]
	_ = x[TagDirnames-1118]
	_ = x[TagOrigDirindexes-1119]
	_ = x[TagOrigBasenames-1120]
	_ = x[TagOrigDirnames-1121]
	_ = x[TagOptFlags-1122]
	_ = x[TagDistURL-1123]
	_ = x[TagPayloadFormat-1124]
	_ = x[TagPayloadCompressor-1125]
	_ = x[TagPayloadFlags-1126]
	_ = x[TagInstallColor-1127]
	_ = x[TagInstallTID-1128]
	_ = x[TagRemoveTID-1129]
	_ = x[TagSHA1RHN-1130]
	_ = x[TagRHNPlatform-1131]
	_ = x[TagPlatform-1132]
	_ = x[TagPatchesName-1133]
	_ = x[TagPatchesFlags-1134]
	_ = x[TagPatchesVersion-1135]
	_ = x[TagCacheCtime-1136]
	_ = x[TagCachePkgPath-1137]
	_ = x[TagCachePkgSize-1138]
	_ = x[TagCachePkgMtime-1139]
	_ = x[TagFileColors-1140]
	_ = x[TagFileClass-1141]
	_ = x[TagClassDict-1142]
	_ = x[TagFileDependsX-1143]
	_ = x[TagFileDependsN-1144]
	_ = x[TagDependsDict-1145]
	_ = x[TagSourcePkgID-1146]
	_ = x[TagFileContexts-1147]
	_ = x[TagFSContexts-1148]
	_ = x[TagREContexts-1149]
	_ = x[TagPolicies-1150]
	_ = x[TagPreTrans-1151]
	_ = x[TagPostTrans-1152]
	_ = x[TagPreTransProg-1153]
	_ = x[TagPostTransProg-1154]
	_ = x[TagDistTag-1155]
	_ = x[TagOldSuggestsName-1156]
	_ = x[TagOldSuggestsVersion-1157]
	_ = x[TagOldSuggestsFlags-1158]
	_ = x[TagOldEnhancesName-1159]
	_ = x[TagOldEnhancesVersion-1160]
	_ = x[TagOldEnhancesFlags-1161]
	_ = x[TagPriority-1162]
	_ = x[TagCVSID-1163]
	_ = x[TagBLinkPkgID-1164]
	_ = x[TagBLinkHdrID-1165]
	_ = x[TagBLinkNEVRA-1166]
	_ = x[TagFLinkPkgID-1167]
	_ = x[TagFLinkHdrID-1168]
	_ = x[TagFLinkNEVRA-1169]
	_ = x[TagPackageOrigin-1170]
	_ = x[TagTriggerPreInstall-1171]
	_ = x[TagBuildSuggests-1172]
	_ = x[TagBuildEnhances-1173]
	_ = x[TagScriptStates-1174]
	_ = x[TagScriptMetrics-1175]
	_ = x[TagBuildCPUClock-1176]
	_ = x[TagFileDigestAlgos-1177]
	_ = x[TagVariants-1178]
	_ = x[TagXMajor-1179]
	_ = x[TagXMinor-1180]
	_ = x[TagRepoTag-1181]
	_ = x[TagKeywords-1182]
	_ = x[TagBuildPlatforms-1183]
	_ = x[TagPackageColor-1184]
	_ = x[TagPackagePrefColor-1185]
	_ = x[TagXAttrsDict-1186]
	_ = x[TagFileXAttrsx-1187]
	_ = x[TagDepAttrsDict-1188]
	_ = x[TagConflictAttrsX-1189]
	_ = x[TagObsoleteAttrsX-1190]
	_ = x[TagProvideAttrsX-1191]
	_ = x[TagRequireAttrsX-1192]
	_ = x[TagBuildProvides-1193]
	_ = x[TagBuildObsoletes-1194]
	_ = x[TagDbInstance-1195]
	_ = x[TagNVRA-1196]
	_ = x[TagFilenames-5000]
	_ = x[TagFileProvide-5001]
	_ = x[TagFileRequire-5002]
	_ = x[TagFsNames-5003]
	_ = x[TagFsFizes-5004]
	_ = x[TagTriggerConds-5005]
	_ = x[TagTriggerType-5006]
	_ = x[TagOrigFileNames-5007]
	_ = x[TagLongFileSizes-5008]
	_ = x[TagLongSize-5009]
	_ = x[TagFileCaps-5010]
	_ = x[TagFileDigestAlgo-5011]
	_ = x[TagBugURL-5012]
	_ = x[TagEVR-5013]
	_ = x[TagNVR-5014]
	_ = x[TagNEVR-5015]
	_ = x[TagNEVRA-5016]
	_ = x[TagHeaderColor-5017]
	_ = x[TagVerbose-5018]
	_ = x[TagEpochNum-5019]
	_ = x[TagPreInstallFlags-5020]
	_ = x[TagPostInstallFlags-5021]
	_ = x[TagPreUninstallFlags-5022]
	_ = x[TagPostUninstallFlags-5023]
	_ = x[TagPreTransFlags-5024]
	_ = x[TagPostTransFlags-5025]
	_ = x[TagVerifyScriptFlags-5026]
	_ = x[TagTriggerScriptFlags-5027]
	_ = x[TagCollections-5029]
	_ = x[TagPolicyNames-5030]
	_ = x[TagPolicyTypes-5031]
	_ = x[TagPolicyTypesIndexes-5032]
	_ = x[TagPolicyFlags-5033]
	_ = x[TagVCS-5034]
	_ = x[TagOrderName-5035]
	_ = x[TagOrderVersion-5036]
	_ = x[TagOrderFlags-5037]
	_ = x[TagMSSFManifest-5038]
	_ = x[TagMSSFDomain-5039]
	_ = x[TagInstFilenames-5040]
	_ = x[TagRequireNEVRS-5041]
	_ = x[TagProvideNEVRS-5042]
	_ = x[TagObsoleteNEVRS-5043]
	_ = x[TagConflictNEVRS-5044]
	_ = x[TagFileNLinks-5045]
	_ = x[TagRecommendName-5046]
	_ = x[TagRecommendVersion-5047]
	_ = x[TagRecommendFlags-5048]
	_ = x[TagSuggestName-5049]
	_ = x[TagSuggestVersion-5050]
	_ = x[TagSuggestFlags-5051]
	_ = x[TagSupplementName-5052]
	_ = x[TagSupplementVersion-5053]
	_ = x[TagSupplementFlags-5054]
	_ = x[TagEnhanceName-5055]
	_ = x[TagEnhanceVersion-5056]
	_ = x[TagEnhanceFlags-5057]
	_ = x[TagRecommendNEVRS-5058]
	_ = x[TagSuggestNEVRS-5059]
	_ = x[TagSupplementNEVRS-5060]
	_ = x[TagEnhanceNEVRS-5061]
	_ = x[TagEncoding-5062]
	_ = x[TagFileTriggerInstall-5063]
	_ = x[TagFileTriggerUninstall-5064]
	_ = x[TagFileTriggerPostUninstall-5065]
	_ = x[TagFileTriggerScripts-5066]
	_ = x[TagFileTriggerScriptProg-5067]
	_ = x[TagFileTriggerScriptFlags-5068]
	_ = x[TagFileTriggerName-5069]
	_ = x[TagFileTriggerIndex-5070]
	_ = x[TagFileTriggerVersion-5071]
	_ = x[TagFileTriggerFlags-5072]
	_ = x[TagTransFileTriggerInstall-5073]
	_ = x[TagTransFileTriggerUninstall-5074]
	_ = x[TagTransFileTriggerPostUninstall-5075]
	_ = x[TagTransFileTriggerScripts-5076]
	_ = x[TagTransFileTriggerScriptProg-5077]
	_ = x[TagTransFileTriggerScriptFlags-5078]
	_ = x[TagTransFileTriggerName-5079]
	_ = x[TagTransFileTriggerIndex-5080]
	_ = x[TagTransFileTriggerVersion-5081]
	_ = x[TagTransFileTriggerFlags-5082]
	_ = x[TagRemovePathPostFixes-5083]
	_ = x[TagFileTriggerPriorities-5084]
	_ = x[TagTransFileTriggerPriorities-5085]
	_ = x[TagFileTriggerConds-5086]
	_ = x[TagFileTriggerType-5087]
	_ = x[TagTransFileTriggerConds-5088]
	_ = x[TagTransFileTriggerType-5089]
	_ = x[TagFileSignatures-5090]
	_ = x[TagFileSignatureLength-5091]
	_ = x[TagPayloadDigest-5092]
	_ = x[TagPayloadDigestAlgo-5093]
	_ = x[TagAutoInstalled-5094]
	_ = x[TagIdentity-5095]
	_ = x[TagModularityLabel-5096]
	_ = x[TagPayloadDigestAlt-5097]
	_ = x[TagArchSuffix-5098]
	_ = x[TagSpec-5099]
	_ = x[TagTranslationURL-5100]
	_ = x[TagUpstreamReleases-5101]
	_ = x[TagSourceLicense-5102]
	_ = x[TagPreUntrans-5103]
	_ = x[TagPostUntrans-5104]
	_ = x[TagPreUntransProg-5105]
	_ = x[TagPostUntransProg-5106]
	_ = x[TagPreUntransFlags-5107]
	_ = x[TagPostUntransFlags-5108]
	_ = x[TagSysusers-5109]
	_ = x[TagBuildSystem-5110]
	_ = x[TagBuildOption-5111]
	_ = x[TagPayloadSize-5112]
	_ = x[TagPayloadSizeAlt-5113]
	_ = x[TagRPMFormat-5114]
	_ = x[TagFileMimeIndex-5115]
	_ = x[TagMimeDict-5116]
	_ = x[TagFileMimes-5117]
	_ = x[TagPackageDigests-5118]
	_ = x[TagPackageDigestAlgos-5119]
}

const (
	_Tag_name_0 = "TagInvalid"
	_Tag_name_1 = "TagHeaderImageTagHeaderSignaturesTagHeaderImmutableTagHeaderRegions"
	_Tag_name_2 = "TagHeaderI18nTable"
	_Tag_name_3 = "_tagSigBaseTagSigSizeTagSigLeMD5TagSigPGPTagSigLeMD5_2TagSigMD5TagSigGPGTagSigGPG5TagBadSHA1_1TagBadSHA1_2TagPubKeysTagDSAHeaderTagRSAHeaderTagSHA1HeaderTagLongSigSizeTagLongArchiveSize"
	_Tag_name_4 = "TagSHA256Header"
	_Tag_name_5 = "TagVeritySignaturesTagVeritySignatureAlgo"
	_Tag_name_6 = "TagNameTagVersionTagReleaseTagEpochTagSummaryTagDescriptionTagBuildTimeTagBuildHostTagInstallTimeTagSizeTagDistributionTagVendorTagGIFTagXPMTagLicenseTagPackagerTagGroupTagChangelogTagSourceTagPatchTagURLTagOSTagArchTagPreInstallTagPostInstallTagPreUninstallTagPostUninstallTagOldFilenamesTagFileSizesTagFileStatesTagFileModesTagFileUidsTagFileGidsTagFileRDevsTagFileMTimesTagFileDigestsTagFileLinkTosTagFileFlagsTagRootTagFileUsernameTagFileGroupnameTagExcludeTagExclusiveTagIconTagSourceRPMTagFileVerifyFlagsTagArchiveSizeTagProvideNameTagRequireFlagsTagRequireNameTagRequireVersionTagNoSourceTagNoPatchTagConflictFlagsTagConflictNameTagConflictVersionTagDefaultPrefixTagBuildRootTagInstallPrefixTagExcludeArchTagExcludeOSTagExclusiveArchTagExclusiveOSTagAutoReqProvTagRPMVersionTagTriggerScriptsTagTriggerNameTagTriggerVersionTagTriggerFlagsTagTriggerIndex"
	_Tag_name_7 = "TagVerifyScriptTagChangelogTimeTagChangelogNameTagChangelogTextTagBrokenMD5TagPreReqTagPreInstallProgTagPostInstallProgTagPreUninstallProgTagPostUninstallProgTagBuildArchsTagObsoleteNameTagVerifyScriptProgTagTriggerScriptProgTagDocDirTagCookieTagFileDevicesTagFileInodesTagFileLangsTagPrefixesTagInstallPrefixesTagTriggerInstallTagTriggerUninstallTagTriggerPostUninstallTagAutoReqTagAutoProvTagCapabilityTagSourcePackageTagOldOriginalFilenamesTagBuildPreReqTagBuildRequiresTagBuildConflictsTagBuildMacrosTagProvideFlagsTagProvideVersionTagObsoleteFlagsTagObsoleteVersionTagDirindexesTagBasenamesTagDirnamesTagOrigDirindexesTagOrigBasenamesTagOrigDirnamesTagOptFlagsTagDistURLTagPayloadFormatTagPayloadCompressorTagPayloadFlagsTagInstallColorTagInstallTIDTagRemoveTIDTagSHA1RHNTagRHNPlatformTagPlatformTagPatchesNameTagPatchesFlagsTagPatchesVersionTagCacheCtimeTagCachePkgPathTagCachePkgSizeTagCachePkgMtimeTagFileColorsTagFileClassTagClassDictTagFileDependsXTagFileDependsNTagDependsDictTagSourcePkgIDTagFileContextsTagFSContextsTagREContextsTagPoliciesTagPreTransTagPostTransTagPreTransProgTagPostTransProgTagDistTagTagOldSuggestsNameTagOldSuggestsVersionTagOldSuggestsFlagsTagOldEnhancesNameTagOldEnhancesVersionTagOldEnhancesFlagsTagPriorityTagCVSIDTagBLinkPkgIDTagBLinkHdrIDTagBLinkNEVRATagFLinkPkgIDTagFLinkHdrIDTagFLinkNEVRATagPackageOriginTagTriggerPreInstallTagBuildSuggestsTagBuildEnhancesTagScriptStatesTagScriptMetricsTagBuildCPUClockTagFileDigestAlgosTagVariantsTagXMajorTagXMinorTagRepoTagTagKeywordsTagBuildPlatformsTagPackageColorTagPackagePrefColorTagXAttrsDictTagFileXAttrsxTagDepAttrsDictTagConflictAttrsXTagObsoleteAttrsXTagProvideAttrsXTagRequireAttrsXTagBuildProvidesTagBuildObsoletesTagDbInstanceTagNVRA"
	_Tag_name_8 = "TagFilenamesTagFileProvideTagFileRequireTagFsNamesTagFsFizesTagTriggerCondsTagTriggerTypeTagOrigFileNamesTagLongFileSizesTagLongSizeTagFileCapsTagFileDigestAlgoTagBugURLTagEVRTagNVRTagNEVRTagNEVRATagHeaderColorTagVerboseTagEpochNumTagPreInstallFlagsTagPostInstallFlagsTagPreUninstallFlagsTagPostUninstallFlagsTagPreTransFlagsTagPostTransFlagsTagVerifyScriptFlagsTagTriggerScriptFlags"
	_Tag_name_9 = "TagCollectionsTagPolicyNamesTagPolicyTypesTagPolicyTypesIndexesTagPolicyFlagsTagVCSTagOrderNameTagOrderVersionTagOrderFlagsTagMSSFManifestTagMSSFDomainTagInstFilenamesTagRequireNEVRSTagProvideNEVRSTagObsoleteNEVRSTagConflictNEVRSTagFileNLinksTagRecommendNameTagRecommendVersionTagRecommendFlagsTagSuggestNameTagSuggestVersionTagSuggestFlagsTagSupplementNameTagSupplementVersionTagSupplementFlagsTagEnhanceNameTagEnhanceVersionTagEnhanceFlagsTagRecommendNEVRSTagSuggestNEVRSTagSupplementNEVRSTagEnhanceNEVRSTagEncodingTagFileTriggerInstallTagFileTriggerUninstallTagFileTriggerPostUninstallTagFileTriggerScriptsTagFileTriggerScriptProgTagFileTriggerScriptFlagsTagFileTriggerNameTagFileTriggerIndexTagFileTriggerVersionTagFileTriggerFlagsTagTransFileTriggerInstallTagTransFileTriggerUninstallTagTransFileTriggerPostUninstallTagTransFileTriggerScriptsTagTransFileTriggerScriptProgTagTransFileTriggerScriptFlagsTagTransFileTriggerNameTagTransFileTriggerIndexTagTransFileTriggerVersionTagTransFileTriggerFlagsTagRemovePathPostFixesTagFileTriggerPrioritiesTagTransFileTriggerPrioritiesTagFileTriggerCondsTagFileTriggerTypeTagTransFileTriggerCondsTagTransFileTriggerTypeTagFileSignaturesTagFileSignatureLengthTagPayloadDigestTagPayloadDigestAlgoTagAutoInstalledTagIdentityTagModularityLabelTagPayloadDigestAltTagArchSuffixTagSpecTagTranslationURLTagUpstreamReleasesTagSourceLicenseTagPreUntransTagPostUntransTagPreUntransProgTagPostUntransProgTagPreUntransFlagsTagPostUntransFlagsTagSysusersTagBuildSystemTagBuildOptionTagPayloadSizeTagPayloadSizeAltTagRPMFormatTagFileMimeIndexTagMimeDictTagFileMimesTagPackageDigestsTagPackageDigestAlgos"
)

var (
	_Tag_index_1 = [...]uint8{0, 14, 33, 51, 67}
	_Tag_index_3 = [...]uint8{0, 11, 21, 32, 41, 54, 63, 72, 82, 94, 106, 116, 128, 140, 153, 167, 185}
	_Tag_index_5 = [...]uint8{0, 19, 41}
	_Tag_index_6 = [...]uint16{0, 7, 17, 27, 35, 45, 59, 71, 83, 97, 104, 119, 128, 134, 140, 150, 161, 169, 181, 190, 198, 204, 209, 216, 229, 243, 258, 274, 289, 301, 314, 326, 337, 348, 360, 373, 387, 401, 413, 420, 435, 451, 461, 473, 480, 492, 510, 524, 538, 553, 567, 584, 595, 605, 621, 636, 654, 670, 682, 698, 712, 724, 740, 754, 768, 781, 798, 812, 829, 844, 859}
	_Tag_index_7 = [...]uint16{0, 15, 31, 47, 63, 75, 84, 101, 119, 138, 158, 171, 186, 205, 225, 234, 243, 257, 270, 282, 293, 311, 328, 347, 370, 380, 391, 404, 420, 443, 457, 473, 490, 504, 519, 536, 552, 570, 583, 595, 606, 623, 639, 654, 665, 675, 691, 711, 726, 741, 754, 766, 776, 790, 801, 815, 830, 847, 860, 875, 890, 906, 919, 931, 943, 958, 973, 987, 1001, 1016, 1029, 1042, 1053, 1064, 1076, 1091, 1107, 1117, 1135, 1156, 1175, 1193, 1214, 1233, 1244, 1252, 1265, 1278, 1291, 1304, 1317, 1330, 1346, 1366, 1382, 1398, 1413, 1429, 1445, 1463, 1474, 1483, 1492, 1502, 1513, 1530, 1545, 1564, 1577, 1591, 1606, 1623, 1640, 1656, 1672, 1688, 1705, 1718, 1725}
	_Tag_index_8 = [...]uint16{0, 12, 26, 40, 50, 60, 75, 89, 105, 121, 132, 143, 160, 169, 175, 181, 188, 196, 210, 220, 231, 249, 268, 288, 309, 325, 342, 362, 383}
	_Tag_index_9 = [...]uint16{0, 14, 28, 42, 63, 77, 83, 95, 110, 123, 138, 151, 167, 182, 197, 213, 229, 242, 258, 277, 294, 308, 325, 340, 357, 377, 395, 409, 426, 441, 458, 473, 491, 506, 517, 538, 561, 588, 609, 633, 658, 676, 695, 716, 735, 761, 789, 821, 847, 876, 906, 929, 953, 979, 1003, 1025, 1049, 1078, 1097, 1115, 1139, 1162, 1179, 1201, 1217, 1237, 1253, 1264, 1282, 1301, 1314, 1321, 1338, 1357, 1373, 1386, 1400, 1417, 1435, 1453, 1472, 1483, 1497, 1511, 1525, 1542, 1554, 1570, 1581, 1593, 1610, 1631}
)

func (i Tag) String() string {
	switch {
	case i == -1:
		return _Tag_name_0
	case 62 <= i && i <= 65:
		i -= 62
		return _Tag_name_1[_Tag_index_1[i]:_Tag_index_1[i+1]]
	case i == 100:
		return _Tag_name_2
	case 256 <= i && i <= 271:
		i -= 256
		return _Tag_name_3[_Tag_index_3[i]:_Tag_index_3[i+1]]
	case i == 273:
		return _Tag_name_4
	case 276 <= i && i <= 277:
		i -= 276
		return _Tag_name_5[_Tag_index_5[i]:_Tag_index_5[i+1]]
	case 1000 <= i && i <= 1069:
		i -= 1000
		return _Tag_name_6[_Tag_index_6[i]:_Tag_index_6[i+1]]
	case 1079 <= i && i <= 1196:
		i -= 1079
		return _Tag_name_7[_Tag_index_7[i]:_Tag_index_7[i+1]]
	case 5000 <= i && i <= 5027:
		i -= 5000
		return _Tag_name_8[_Tag_index_8[i]:_Tag_index_8[i+1]]
	case 5029 <= i && i <= 5119:
		i -= 5029
		return _Tag_name_9[_Tag_index_9[i]:_Tag_index_9[i+1]]
	default:
		return "Tag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeNull-0]
	_ = x[TypeChar-1]
	_ = x[TypeInt8-2]
	_ = x[TypeInt16-3]
	_ = x[TypeInt32-4]
	_ = x[TypeInt64-5]
	_ = x[TypeString-6]
	_ = x[TypeBin-7]
	_ = x[TypeStringArray-8]
	_ = x[TypeI18nString-9]
}

const _Kind_name = "TypeNullTypeCharTypeInt8TypeInt16TypeInt32TypeInt64TypeStringTypeBinTypeStringArrayTypeI18nString"

var _Kind_index = [...]uint8{0, 8, 16, 24, 33, 42, 51, 61, 68, 83, 97}

func (i Kind) String() string {
	if i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
